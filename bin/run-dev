#! /bin/bash

# DOC: Run the app locally using Docker. Useful for manual testing.

pushd $(git rev-parse --show-toplevel) > /dev/null

set -e

bin/pull-image

if [ -f ".secrets" ]; then
    . .secrets
fi


# Get cloud provider (currently either AWS or Azure)
_setArgs(){
  while [ "${1:-}" != "" ]; do
    case "$1" in 
      "--azure")
       cloudProvider="azure"
       emulator="azurite"
       export STORAGE_SERVICE_NAME="azure-blob"
       ;;
      "--aws")
       cloudProvider="aws"
       emulator="localstack"
       export STORAGE_SERVICE_NAME="s3"
       ;;
    esac
    shift
  done
}

_setArgs $*

# default to AWS for now
if [ -z "$cloudProvider" ]; then 
  cloudProvider="aws" && emulator="localstack"
  export STORAGE_SERVICE_NAME="s3"
fi

# start emulator
docker-compose --profile $cloudProvider \
  -f docker-compose.yml \
  -f docker-compose.dev.yml \
  up \
  -d $emulator

# wait till localstack running
# otherwise other services crash
bin/${emulator}/wait

# Once the server starts through the subsequent 'up' the webserver will lazily compile a lot of resources upon first
# load. This will instigates that happening so the server is fully usable for the user.
for i in {1..24}; do
  curl --output /dev/null --silent --fail http://localhost:9000/script-startup-load && break
  sleep 5
done &	

# start everything else
docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

popd > /dev/null
